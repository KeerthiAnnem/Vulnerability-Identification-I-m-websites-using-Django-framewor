from django.db import models
from django.template.defaultfilters import slugify
import random
from django.urls import reverse

class Report(models.Model):
    user = models.ForeignKey('users.Account', null=True, blank=True, on_delete=models.SET_NULL)
    site = models.CharField(max_length=255)
    host = models.CharField(max_length=255, null=True)
    port = models.IntegerField(null=True)
    ssl = models.CharField(max_length=10, null=True)
    slug = models.SlugField(max_length=155, unique=True)
    alerts = models.ManyToManyField('main.Alert', related_name='alert_reports')
    scanned_at = models.CharField(max_length=50)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        ordering = ['-updated_at']

    def save(self, *args, **kwargs): # new
        if not self.slug:
            self.slug = slugify(f"{self.host}-{random.randint(12345, 54321)}")
        return super().save(*args, **kwargs)

    def __str__(self):
        return f"[{self.scanned_at}] {self.site}"
    
    def get_absolute_url(self):
        return reverse('main:report', kwargs={
            "pk": self.id
        })

    @property
    def get_high_alerts(self):
        return self.alerts.filter(level=3)
    
    @property
    def get_medium_alerts(self):
        return self.alerts.filter(level=2)
    
    @property
    def get_low_alerts(self):
        return self.alerts.filter(level=1)
    
    @property
    def get_info_alerts(self):
        return self.alerts.filter(level=0)
    
class Alert(models.Model):
    name = models.CharField(max_length=255)
    level = models.IntegerField()
    risk_description = models.CharField(max_length=100)
    description = models.TextField(null=True)
    instances = models.ManyToManyField('main.Instance', related_name='instance_alerts')
    solution = models.TextField(null=True)
    reference = models.TextField(null=True)
    other_info = models.TextField(null=True, blank=True)
    cwe_ID = models.IntegerField(null=True)
    wasc_ID = models.IntegerField(null=True)
    source_ID = models.IntegerField(null=True)
    plugin_ID = models.IntegerField(null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.name
    
class Instance(models.Model):
    url = models.URLField(max_length=255)
    method = models.CharField(max_length=10)
    parameter = models.CharField(max_length=255, null=True)
    attack = models.CharField(max_length=255, null=True)
    evidence = models.CharField(max_length=100, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return self.url
    